# Data paths
data:
  purchase_data: data/us_spirits_purchase_data.csv
  products_data: data/products.csv
  clusters_data: data/clusters.csv

# TimeGPT settings
timegpt:
  api_key: YOUR_NIXTLA_API_KEY  # Replace with your actual Nixtla API key
  forecast_horizon: 30
  confidence_level: 0.95
  frequency: D
  model: timegpt-1

# Data processing settings
processing:
  chunk_size: 100000
  output_dir: processed_data
  quality_threshold: 0.95
  features:
    - date
    - product_id
    - territory
    - sales
    - price
    - promotion
    - seasonality
  anomaly_detection:
    contamination: 0.1
    random_state: 42
  feature_engineering:
    time_features:
      - year
      - month
      - day
      - dayofweek
      - quarter
    lag_features:
      - sales: [1, 7, 14, 30]
      - price: [1, 7, 14]
    rolling_features:
      - sales: [7, 14, 30]
      - price: [7, 14]

# Forecasting settings
forecasting:
  forecast_horizon: 12
  confidence_level: 0.95
  output_dir: output/forecasts
  model:
    type: timegpt
    params:
      freq: D
      seasonality: 7
      trend: true
  evaluation:
    metrics:
      - mae
      - mse
      - rmse
      - mape
    test_size: 0.2

# News collection settings
news:
  search_terms:
    - alcohol industry trends
    - spirits market analysis
    - beverage industry news
    - alcohol consumption patterns
    - spirits sales forecast
  api_key: YOUR_NEWS_API_KEY # Placeholder for News API key
  time_range: 1y
  output_dir: output/news
  sources:
    reddit:
      subreddits:
        - r/alcohol
        - r/business
        - r/economics
      limit: 100
    google_trends:
      timeframe: 'today 12-m'
      geo: 'US'
    trading_economics:
      indicators:
        - alcohol consumption
        - retail sales
        - consumer spending

# Simulation settings
simulation:
  scenarios:
    - name: price_increase
      feature: price
      change: 0.1
    - name: promotion_boost
      feature: promotion
      change: 0.2
    - name: seasonal_effect
      feature: seasonality
      change: 0.15
  output_dir: output/simulations
  model:
    type: random_forest
    params:
      n_estimators: 100
      max_depth: 10
      random_state: 42
  evaluation:
    metrics:
      - r2
      - mae
      - rmse

# Report generation settings
report:
  template_dir: templates
  output_dir: output/reports
  sections:
    - executive_summary
    - data_overview
    - forecast_analysis
    - market_insights
    - simulation_results
    - recommendations
  visualization:
    style: seaborn
    context: notebook
    palette: deep
    figsize: [12, 6]
  presentation:
    theme: default
    transition: slide
    auto_play: false

# Output directories
output:
  processed_data_dir: processed_data
  forecasts_dir: output/forecasts
  news_dir: output/news
  simulations_dir: output/simulations
  reports_dir: output/reports
  presentations_dir: output/presentations
  logs_dir: logs

# Logging settings
logging:
  level: INFO
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  date_format: '%Y-%m-%d %H:%M:%S'

# LLM settings
llm:
  provider: openai # or 'gemini', 'huggingface', etc.
  model: gpt-4 # or 'gemini-pro', 'text-davinci-003', etc.
  api_key: YOUR_OPENAI_API_KEY # Or your specific LLM API key
  temperature: 0.7
  max_tokens: 1000

# Anomaly detection settings
anomaly_detection:
  threshold: 2.0
  window_size: 7 